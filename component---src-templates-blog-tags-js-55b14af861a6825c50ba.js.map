{"version":3,"sources":["webpack:///./src/templates/blog-tags.js"],"names":["BlogTags","props","data","siteTitle","site","siteMetadata","title","siteDescription","description","posts","allMarkdownRemark","edges","pageContext","totalPage","currentPage","tag","htmlAttributes","lang","meta","name","content","style","borderRadius","paddingTop","marginBottom","fontSize","map","post","idx","node","frontmatter","fields","slug","date","tags","comments","timeToRead","key","display","flexWrap","justifyContent","listStyle","padding","to","rel"],"mappings":"4FAAA,6FA6FeA,UAtFE,SAAAC,GACf,IAAQC,EAASD,EAATC,KACFC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAkBL,EAAKE,KAAKC,aAAaG,YACzCC,EAAQP,EAAKQ,kBAAkBC,MACrC,EAAwCV,EAAMW,YAAtCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,YAAaC,EAAhC,EAAgCA,IAEhC,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKT,MAAO,kBAAmBE,YAAa,oBAC5C,YAAC,IAAD,CACEQ,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAASb,IACvCD,MAAOH,IAET,uBACEkB,MAAO,CAELC,aAAa,MAEbC,WAAY,OACZC,aAAa,SAEbC,SAAS,SAGX,2BAEIhB,EAAMiB,KAAI,SAACC,EAAMC,GACf,IAAQC,EAASF,EAATE,KACFvB,EAAQuB,EAAKC,YAAYxB,OAASuB,EAAKE,OAAOC,KAC9CC,EAAOJ,EAAKC,YAAYG,KACxBD,EAAOH,EAAKE,OAAOC,KACnBE,EAAOL,EAAKC,YAAYI,MAAQ,GAChCC,EAAWN,EAAKC,YAAYK,SAC5BC,EAAaP,EAAKO,WACxB,OACE,YAAC,IAAD,CACEC,IAAKT,EACLtB,MAAOA,EACP2B,KAAMA,EACND,KAAMA,EACNE,KAAMA,EACNC,SAAUA,EACVC,WAAYA,QAMtB,2BACE,mBACEf,MAAO,CACLiB,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,uBACG5B,EAAc,EAAI,GACjB,YAAC,OAAD,CACE6B,GACE,SAAS5B,EAAT,KAAmBD,EAAc,GAAM,EAAI,GAAKA,EAAc,GAEhE8B,IAAI,QAJN,UAUJ,uBACG9B,EAAc,GAAKD,GAClB,YAAC,OAAD,CAAM8B,GAAI,SAAS5B,EAAT,KAAmBD,EAAc,GAAI8B,IAAI,QAAnD","file":"component---src-templates-blog-tags-js-55b14af861a6825c50ba.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Helmet from \"react-helmet\"\nimport Layout from \"../components/layout\"\nimport CrayonsStory from \"../components/crayons-story\"\nimport SEO from \"../components/seo\"\n\nconst BlogTags = props => {\n  const { data } = props\n  const siteTitle = data.site.siteMetadata.title\n  const siteDescription = data.site.siteMetadata.description\n  const posts = data.allMarkdownRemark.edges\n  const { totalPage, currentPage, tag } = props.pageContext\n\n  return (\n    <Layout>\n      <SEO title={'tags-pagination'} description={'tags-pagination'} />\n      <Helmet\n        htmlAttributes={{ lang: \"en\" }}\n        meta={[{ name: \"description\", content: siteDescription }]}\n        title={siteTitle}\n      />\n      <article\n        style={{\n          // border: `1px solid black`,\n          borderRadius: `3px`,\n          // paddingTop: '3.5rem',\n          paddingTop: '1rem',\n          marginBottom: `0.5rem`,\n          // background: `white`,\n          fontSize: `1rem`,\n        }}\n      >\n        <section>\n          {\n            posts.map((post, idx) => {\n              const { node } = post\n              const title = node.frontmatter.title || node.fields.slug\n              const date = node.frontmatter.date\n              const slug = node.fields.slug\n              const tags = node.frontmatter.tags || []\n              const comments = node.frontmatter.comments\n              const timeToRead = node.timeToRead\n              return (\n                <CrayonsStory\n                  key={idx}\n                  title={title}\n                  date={date}\n                  slug={slug}\n                  tags={tags}\n                  comments={comments}\n                  timeToRead={timeToRead}\n                />\n              )\n            })\n          }\n        </section>\n        <section>\n          <div\n            style={{\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-between\",\n              listStyle: \"none\",\n              padding: 0,\n            }}\n          >\n            <div>\n              {currentPage - 1 > 0 && (\n                <Link\n                  to={\n                    `/tags/${tag}/` + (currentPage - 1 === 1 ? \"\" : currentPage - 1)\n                  }\n                  rel=\"prev\"\n                >\n                  ← 上一页\n                </Link>\n              )}\n            </div>\n            <div>\n              {currentPage + 1 <= totalPage && (\n                <Link to={`/tags/${tag}/` + (currentPage + 1)} rel=\"next\">\n                  下一页 →\n                </Link>\n              )}\n            </div>\n          </div>\n        </section>\n      </article>\n    </Layout>\n  )\n}\n\nexport default BlogTags\n\nexport const pageQuery = graphql`\n  query($tag: String!, $skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            comments\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}