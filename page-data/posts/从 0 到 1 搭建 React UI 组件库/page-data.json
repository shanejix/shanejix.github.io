{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/从 0 到 1 搭建 React UI 组件库/","result":{"data":{"site":{"siteMetadata":{"title":"shanejix","description":"learner && coder"}},"allMarkdownRemark":{"edges":[{"node":{"id":"9dd4013c-c308-552c-bd2c-04f0cd996599","timeToRead":5}},{"node":{"id":"d29bf37d-75f0-501e-92b1-42c06cdbcd7b","timeToRead":3}},{"node":{"id":"89619e78-eeef-5342-b7fe-7626ee925f57","timeToRead":9}},{"node":{"id":"cb3a4052-202e-5a46-bf15-4e9b30e34ebf","timeToRead":3}},{"node":{"id":"45c6b07a-fc6a-5800-9907-86a94c1f4ace","timeToRead":2}},{"node":{"id":"db38bc53-9935-56f0-a9e2-0be373990d78","timeToRead":3}},{"node":{"id":"1dcfd849-d044-5c73-b31a-5fd30393f430","timeToRead":14}},{"node":{"id":"7b38ed3c-4032-581a-aab4-bda6dcb8fa78","timeToRead":15}},{"node":{"id":"d15e9143-f799-527d-b71d-2b8fc195817c","timeToRead":12}},{"node":{"id":"ba521381-a518-5686-a682-0ada55a7dd73","timeToRead":4}},{"node":{"id":"ba58ecad-907f-5ad2-bc26-9167d7607dcc","timeToRead":12}},{"node":{"id":"08b71346-abf3-5649-84f5-2f8ae4f48c6a","timeToRead":3}},{"node":{"id":"da55e002-3a8a-5af2-929e-4de7e3a8d314","timeToRead":4}},{"node":{"id":"4e56b6de-c0ca-572e-9f9d-e769592aa49b","timeToRead":2}},{"node":{"id":"af002700-632d-547f-82b9-f31919d4f03e","timeToRead":1}},{"node":{"id":"7b6d671f-8de2-5511-91e9-0797db813dc7","timeToRead":1}},{"node":{"id":"ad4fad45-b734-560c-8324-a9708e1e04c4","timeToRead":1}},{"node":{"id":"ef84ef13-dac8-5cfa-ac69-d0ea44f677f1","timeToRead":2}},{"node":{"id":"69026b7f-ca1c-5eea-8f61-76972396800c","timeToRead":2}},{"node":{"id":"52b13183-db66-5637-bc21-c828b8dabddd","timeToRead":8}},{"node":{"id":"14bde951-d8e7-5045-84f7-dd9479cfafc3","timeToRead":35}},{"node":{"id":"aa4d72c6-d675-52e4-a55b-b07237ed0e1a","timeToRead":2}},{"node":{"id":"eb631c0f-69a5-5ca8-b3c7-1baaed014eea","timeToRead":1}},{"node":{"id":"684d2035-e385-577d-bb53-f7bfca2caa0d","timeToRead":18}},{"node":{"id":"a40d34f8-b202-5f5b-8c33-19c7c163bbce","timeToRead":5}},{"node":{"id":"afc44728-7e4f-5ce3-bf62-373400a8a46a","timeToRead":12}},{"node":{"id":"ca3cc4cf-0ddf-5fb3-a58d-2354b2f0a10e","timeToRead":5}},{"node":{"id":"fe7fd5be-04af-5d1a-b969-f8f4de7db655","timeToRead":1}},{"node":{"id":"fb3bc99d-cf2f-5fbd-981d-1d701815f87b","timeToRead":66}},{"node":{"id":"4de1fb79-73c7-5593-adc3-427351c465e9","timeToRead":101}},{"node":{"id":"9a102758-e412-5f31-8753-54534e8fdb15","timeToRead":1}},{"node":{"id":"a07217e5-4cbe-54e4-9566-2a0df732a1a4","timeToRead":1}},{"node":{"id":"c8a73065-3214-5616-93f3-0df2a119e91d","timeToRead":1}}]},"markdownRemark":{"id":"14bde951-d8e7-5045-84f7-dd9479cfafc3","excerpt":"同步链接: https://www.shanejix.com/posts/从 0 到 1 搭建 React UI 组件库/ 虽然参与了项目组的组件库架构设计和讨论，但是终究不是在自己完全愿景下实施。总想着自己造一个的组件库，于是就有了下面从 0 到…","html":"<blockquote>\n<p>同步链接: <a href=\"https://www.shanejix.com/posts/%E4%BB%8E%200%20%E5%88%B0%201%20%E6%90%AD%E5%BB%BA%20React%20UI%20%E7%BB%84%E4%BB%B6%E5%BA%93/\">https://www.shanejix.com/posts/从 0 到 1 搭建 React UI 组件库/</a></p>\n</blockquote>\n<p>虽然参与了项目组的组件库架构设计和讨论，但是终究不是在自己完全愿景下实施。总想着自己造一个的组件库，于是就有了下面从 0 到 1 包含源起，构建，测试，测试，站点，发布等部分。</p>\n<p>万物从起名开始，思来想去也没想到什么高大上的名字，姑且就叫 <code class=\"language-text\">block-ui</code>所有个代码都放在 <a href=\"https://github.com/block-org\">@block-org</a> 组织下</p>\n<h2>一，源起</h2>\n<h3>新建项目</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">mkdir</span> block-ui <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> block-ui <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">yarn</span> init -y\n\n<span class=\"token comment\"># 新建源码文件夹以及入口文件</span>\n<span class=\"token function\">mkdir</span> src <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> src <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">touch</span> index.ts</code></pre></div>\n<h3>代码规范</h3>\n<p><strong>.eslintrc</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token string\">\"extends\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"airbnb\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"plugin:react/recommended\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"plugin:prettier/recommended\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"plugin:react-hooks/recommended\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n   <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>.prettierrc</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"arrowParens\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"always\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"semi\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"singleQuote\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"jsxSingleQuote\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"printWidth\"</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"useTabs\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"tabWidth\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"trailingComma\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es5\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>.stylelintrc.js</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"extends\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"stylelint-config-standard\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"stylelint-config-prettier\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"customSyntax\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"postcss-less\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"rules\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"no-descending-specificity\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"no-duplicate-selectors\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"font-family-no-missing-generic-family-keyword\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"block-opening-brace-space-before\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"always\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"declaration-block-trailing-semicolon\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"declaration-colon-newline-after\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"indentation\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"selector-descendant-combinator-no-non-space\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"selector-class-pattern\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"keyframes-name-pattern\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"no-invalid-position-at-import-rule\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"number-max-precision\"</span><span class=\"token operator\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"color-function-notation\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"selector-pseudo-class-no-unknown\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"ignorePseudoClasses\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"global\"</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Commit Lint</h3>\n<ol>\n<li>进行 <code class=\"language-text\">pre-commit</code> 代码规范检测</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> husky lint-staged -D</code></pre></div>\n<p>新增 <code class=\"language-text\">package.json</code> 信息</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"lint-staged\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"components/**/*.ts?(x)\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"prettier --write --ignore-unknown\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"eslint --fix\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"git add\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"components/**/*.less\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"stylelint --syntax less --fix\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"git add\"</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"husky\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"hooks\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"pre-commit\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"lint-staged\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>2.进行 Commit Message 检测</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> @commitlint/cli @commitlint/config-conventional commitizen cz-conventional-changelog -D</code></pre></div>\n<p>新增.commitlintrc.js 写入以下内容</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">extends</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"@commitlint/config-conventional\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>package.json 写入以下内容：</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token comment\">// ...</span>\n\n<span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"commit\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"git-cz\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ...</span>\n\n<span class=\"token property\">\"husky\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"hooks\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"commit-msg\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"commitlint -E HUSKY_GIT_PARAMS\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"pre-commit\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"lint-staged\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"config\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"commitizen\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cz-conventional-changelog\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">husky</code>在代码提交的时候执行一些 bash 命令，<code class=\"language-text\">lint-staged</code>只针对当前提交/改动过的文件进行处理</p>\n<h3>TypeScript</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> typescript -D</code></pre></div>\n<p>新建<code class=\"language-text\">tsconfig.json</code>并写入以下内容</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"outDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"esm\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"jsx\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es6\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es5\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"lib\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"es5\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dom\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"moduleResolution\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"declaration\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"noUnusedLocals\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"noUnusedParameters\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"skipLibCheck\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"esModuleInterop\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"downlevelIteration\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"experimentalDecorators\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"allowSyntheticDefaultImports\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"include\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"components/**/*.ts\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"components/**/*.tsx\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"exclude\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"node_modules\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"components/**/*.test.tsx\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"components/**/*.test.ts\"</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>组件</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">alert\n    ├── index<span class=\"token punctuation\">.</span>ts            # 入口文件 源文件\n    ├── <span class=\"token keyword\">interface</span><span class=\"token punctuation\">.</span>ts        # 类型声明文件\n    └── style\n        ├── index<span class=\"token punctuation\">.</span>less      # 样式文件\n        └── index<span class=\"token punctuation\">.</span>ts        # 样式文件里为什么存在一个index<span class=\"token punctuation\">.</span>ts  <span class=\"token comment\">// 按需加载样式 管理样式依赖 后面章节会提到</span></code></pre></div>\n<p>安装 React 相关依赖：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># 开发时依赖，宿主环境一定存在</span>\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> react react-dom @types/react @types/react-dom -D</code></pre></div>\n<p><strong>src/alert/interface.ts</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CSSProperties<span class=\"token punctuation\">,</span> ReactNode <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @title Alert\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">AlertProps</span> <span class=\"token punctuation\">{</span>\n  style<span class=\"token operator\">?</span><span class=\"token operator\">:</span> CSSProperties<span class=\"token punctuation\">;</span>\n  className<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * @zh 自定义操作项\n   * @en Custom action item\n   */</span>\n  action<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ReactNode<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * @zh 是否可关闭\n   * @en Whether Alert can be closed\n   */</span>\n  closable<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  closeable<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// typo</span>\n  <span class=\"token comment\">/**\n   * @zh 关闭的回调\n   * @en Callback when Alert is closed\n   */</span>\n  onClose<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * @zh 关闭动画结束后执行的回调\n   * @en Callback when Alert close animation is complete\n   */</span>\n  afterClose<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * @zh 警告的类型\n   * @en Type of Alert\n   * @defaultValue info\n   */</span>\n  type<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token string\">\"info\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"success\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"warning\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * @zh 标题\n   * @en Alert title\n   */</span>\n  title<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ReactNode<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * @zh 内容\n   * @en Alert content\n   */</span>\n  content<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ReactNode<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * @zh 可以指定自定义图标，`showIcon` 为 `true` 时生效。\n   * @en Custom icon, effective when `showIcon` is `true`\n   */</span>\n  icon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ReactNode<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * @zh 自定义关闭按钮\n   * @en Custom close button\n   */</span>\n  closeElement<span class=\"token operator\">?</span><span class=\"token operator\">:</span> ReactNode<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * @zh 是否显示图标\n   * @en Whether to show icon\n   * @defaultValue true\n   */</span>\n  showIcon<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * @zh 是否用作顶部公告\n   * @en Whether to show as banner\n   */</span>\n  banner<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>src/alert/index.ts</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useContext<span class=\"token punctuation\">,</span> ReactNode<span class=\"token punctuation\">,</span> forwardRef <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CSSTransition <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-transition-group\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> IconCheckCircleFill <span class=\"token keyword\">from</span> <span class=\"token string\">\"../../icon/react-icon/IconCheckCircleFill\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> IconCloseCircleFill <span class=\"token keyword\">from</span> <span class=\"token string\">\"../../icon/react-icon/IconCloseCircleFill\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> IconInfoCircleFill <span class=\"token keyword\">from</span> <span class=\"token string\">\"../../icon/react-icon/IconInfoCircleFill\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> IconExclamationCircleFill <span class=\"token keyword\">from</span> <span class=\"token string\">\"../../icon/react-icon/IconExclamationCircleFill\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> IconClose <span class=\"token keyword\">from</span> <span class=\"token string\">\"../../icon/react-icon/IconClose\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> cs <span class=\"token keyword\">from</span> <span class=\"token string\">\"../_util/classNames\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ConfigContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../config-provider\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AlertProps <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./interface\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> useMergeProps <span class=\"token keyword\">from</span> <span class=\"token string\">\"../_util/hooks/useMergeProps\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> defaultProps<span class=\"token operator\">:</span> AlertProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  showIcon<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">\"info\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Alert</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">baseProps<span class=\"token operator\">:</span> AlertProps<span class=\"token punctuation\">,</span> ref</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> getPrefixCls<span class=\"token punctuation\">,</span> componentConfig <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useContext</span><span class=\"token punctuation\">(</span>ConfigContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> props <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useMergeProps</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>AlertProps<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>\n    baseProps<span class=\"token punctuation\">,</span>\n    defaultProps<span class=\"token punctuation\">,</span>\n    componentConfig<span class=\"token operator\">?.</span>Alert\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    style<span class=\"token punctuation\">,</span>\n    className<span class=\"token punctuation\">,</span>\n    action<span class=\"token punctuation\">,</span>\n    type <span class=\"token operator\">=</span> <span class=\"token string\">\"info\"</span><span class=\"token punctuation\">,</span>\n    title<span class=\"token punctuation\">,</span>\n    content<span class=\"token punctuation\">,</span>\n    icon<span class=\"token punctuation\">,</span>\n    showIcon<span class=\"token punctuation\">,</span>\n    closable<span class=\"token punctuation\">,</span>\n    closeable<span class=\"token punctuation\">,</span>\n    afterClose<span class=\"token punctuation\">,</span>\n    onClose<span class=\"token punctuation\">,</span>\n    closeElement<span class=\"token punctuation\">,</span>\n    banner<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> prefixCls <span class=\"token operator\">=</span> <span class=\"token function\">getPrefixCls</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alert\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>visible<span class=\"token punctuation\">,</span> setVisible<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useState</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">boolean</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">renderIcon</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">type<span class=\"token operator\">:</span> string <span class=\"token operator\">|</span> <span class=\"token keyword\">void</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ReactNode <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>icon<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> icon<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">case</span> <span class=\"token string\">\"info\"</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">IconInfoCircleFill</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">case</span> <span class=\"token string\">\"success\"</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">IconCheckCircleFill</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">case</span> <span class=\"token string\">\"warning\"</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">IconExclamationCircleFill</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">case</span> <span class=\"token string\">\"error\"</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">IconCloseCircleFill</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">onHandleClose</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setVisible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    onClose <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">onClose</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> classNames <span class=\"token operator\">=</span> <span class=\"token function\">cs</span><span class=\"token punctuation\">(</span>\n    prefixCls<span class=\"token punctuation\">,</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>prefixCls<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">type</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token punctuation\">[</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>prefixCls<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">-with-title</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> title<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>prefixCls<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">-banner</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> banner<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    className\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> _closable <span class=\"token operator\">=</span> <span class=\"token string\">\"closeable\"</span> <span class=\"token keyword\">in</span> props <span class=\"token operator\">?</span> closeable <span class=\"token operator\">:</span> closable<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CSSTransition</span></span>\n      <span class=\"token attr-name\">in</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>visible<span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">timeout</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">300</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">classNames</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>zoomInTop<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">unmountOnExit</span>\n      <span class=\"token attr-name\">onExited</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        afterClose <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">afterClose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>style<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>classNames<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>showIcon <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>prefixCls<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">-icon-wrapper</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span><span class=\"token function\">renderIcon</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>prefixCls<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">-content-wrapper</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span>title <span class=\"token operator\">&amp;&amp;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>prefixCls<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">-title</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span>content <span class=\"token operator\">&amp;&amp;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>prefixCls<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">-content</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>content<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>action <span class=\"token operator\">&amp;&amp;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>prefixCls<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">-action</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>action<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>_closable <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>onHandleClose<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>prefixCls<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">-close-btn</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token punctuation\">{</span>closeElement <span class=\"token operator\">||</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">IconClose</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">CSSTransition</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> AlertComponent <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">forwardRef</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">unknown</span><span class=\"token punctuation\">,</span> AlertProps<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>Alert<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nAlertComponent<span class=\"token punctuation\">.</span>displayName <span class=\"token operator\">=</span> <span class=\"token string\">\"Alert\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> AlertComponent<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> AlertProps <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>src/alert/style/index.less</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"less\"><pre class=\"language-less\"><code class=\"language-less\"><span class=\"token variable\">@import</span> <span class=\"token string\">\"../../style/theme/default.less\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">@import</span> <span class=\"token string\">\"./token.less\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token atrule\">@alert-prefix-cls<span class=\"token punctuation\">:</span> ~\"@</span><span class=\"token punctuation\">{</span>prefix<span class=\"token punctuation\">}</span><span class=\"token operator\">-</span>alert\"<span class=\"token punctuation\">;</span>\n\n<span class=\"token selector\">.@{alert-prefix-cls}</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">box-sizing</span><span class=\"token punctuation\">:</span> border<span class=\"token operator\">-</span>box<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-border-radius</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">@alert-padding-vertical</span> <span class=\"token operator\">-</span> <span class=\"token variable\">@alert-border-width</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">(</span><span class=\"token variable\">@alert-padding-horizontal</span> <span class=\"token operator\">-</span> <span class=\"token variable\">@alert-border-width</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-font-size-text-content</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">align-items</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-line-height</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token selector\">&amp;-with-title</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">@alert-padding-vertical_with_title</span> <span class=\"token operator\">-</span> <span class=\"token variable\">@alert-border-width</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">(</span><span class=\"token variable\">@alert-padding-horizontal_with_title</span> <span class=\"token operator\">-</span> <span class=\"token variable\">@alert-border-width</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-with-title</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">align-items</span><span class=\"token punctuation\">:</span> flex<span class=\"token operator\">-</span>start<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-info</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-border-width</span> solid <span class=\"token variable\">@alert-info-color-border</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-info-color-bg</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-success</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-border-width</span> solid <span class=\"token variable\">@alert-success-color-border</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-success-color-bg</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-warning</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-border-width</span> solid <span class=\"token variable\">@alert-warning-color-border</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-warning-color-bg</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-error</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-border-width</span> solid <span class=\"token variable\">@alert-error-color-border</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-error-color-bg</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-banner</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-content-wrapper</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">flex</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-title</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-font-size-text-title</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-font-weight-title</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-title-line-height</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-title-margin-bottom</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-info &amp;-title</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-info-color-text-title</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-info &amp;-content</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-info-color-text-content</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-info&amp;-with-title &amp;-content</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-info-color-text-content_title</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-success &amp;-title</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-success-color-text-title</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-success &amp;-content</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-success-color-text-content</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-success&amp;-with-title &amp;-content</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-success-color-text-content_title</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-warning &amp;-title</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-warning-color-text-title</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-warning &amp;-content</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-warning-color-text-content</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-warning&amp;-with-title &amp;-content</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-warning-color-text-content_title</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-error &amp;-title</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-error-color-text-title</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-error &amp;-content</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-error-color-text-content</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-error&amp;-with-title &amp;-content</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-error-color-text-content_title</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-icon-wrapper</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin-right</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-margin-icon-right</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-line-height</span> <span class=\"token operator\">*</span> <span class=\"token variable\">@alert-font-size-text-content</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">align-items</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n\n    <span class=\"token selector\">svg</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-font-size-icon</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-with-title &amp;-icon-wrapper</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-title-line-height</span> <span class=\"token operator\">*</span> <span class=\"token variable\">@alert-font-size-text-title</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-with-title &amp;-icon-wrapper svg</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-font-size-icon_with_title</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-info &amp;-icon-wrapper svg</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-info-color-icon</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-success &amp;-icon-wrapper svg</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-success-color-icon</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-warning &amp;-icon-wrapper svg</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-warning-color-icon</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-error &amp;-icon-wrapper svg</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-error-color-icon</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-close-btn</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">box-sizing</span><span class=\"token punctuation\">:</span> border<span class=\"token operator\">-</span>box<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">outline</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-font-size-close-icon</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-color-close-icon</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> transparent<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">cursor</span><span class=\"token punctuation\">:</span> pointer<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> color <span class=\"token variable\">@transition-duration-1</span> <span class=\"token variable\">@transition-timing-function-linear</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-margin-close-icon-left</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 4px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n\n    <span class=\"token selector\">&amp;:hover</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-color-close-icon_hover</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-action + &amp;-close-btn</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-margin-action-right</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-action</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">@alert-margin-action-left</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">&amp;-with-title &amp;-close-btn</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin-right</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>src/alert/style/index.ts</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"../../style/index.less\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"./index.less\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>src/index.ts</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">as</span> Alert <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./alert\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>调试开发</h3>\n<p>引入 <a href=\"https://storybook.js.org/\">storybook</a> ，这个步骤依赖 build 后的产物</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Add Storybook:</span>\nnpx sb init</code></pre></div>\n<p>接下来，要让这个 Alert 在 storybook 里跑起来，帮助调试组件；同时在开发不同组件功能时，可以创建不同的 demo，除了用作调试，也是极好的使用文档</p>\n<p>修改<code class=\"language-text\">.storybook/main.js</code>，并写入以下内容：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// module.exports = {</span>\n<span class=\"token comment\">//   \"stories\": [</span>\n<span class=\"token comment\">//     \"../stories/**/*.stories.mdx\",</span>\n<span class=\"token comment\">//     \"../stories/**/*.stories.@(js|jsx|ts|tsx)\"</span>\n<span class=\"token comment\">//   ],</span>\n<span class=\"token comment\">//   \"addons\": [</span>\n<span class=\"token comment\">//     \"@storybook/addon-links\",</span>\n<span class=\"token comment\">//     \"@storybook/addon-essentials\"</span>\n<span class=\"token comment\">//   ],</span>\n<span class=\"token comment\">//   \"framework\": \"@storybook/react\"</span>\n<span class=\"token comment\">// }</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> lessRegex <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.less$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> lessModuleRegex <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.module\\.less$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getLoaderForStyle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">isCssModule</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      loader<span class=\"token operator\">:</span> <span class=\"token string\">\"style-loader\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      loader<span class=\"token operator\">:</span> <span class=\"token string\">\"css-loader\"</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token operator\">:</span> isCssModule <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span> modules<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      loader<span class=\"token operator\">:</span> <span class=\"token string\">\"less-loader\"</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        javascriptEnabled<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  stories<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"../stories/index.stories.js\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">webpackFinal</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    config<span class=\"token punctuation\">.</span>resolve<span class=\"token punctuation\">.</span>alias<span class=\"token punctuation\">[</span><span class=\"token string\">\"@self/icon\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"../icon\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    config<span class=\"token punctuation\">.</span>resolve<span class=\"token punctuation\">.</span>alias<span class=\"token punctuation\">[</span><span class=\"token string\">\"@self\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"../esm\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// config.resolve.modules = ['node_modules', path.resolve(__dirname, '../site/node_modules')];</span>\n    <span class=\"token comment\">// 解决 webpack 编译警告</span>\n    config<span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>use<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"@babel/plugin-proposal-private-property-in-object\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> loose<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 支持 import less</span>\n    config<span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      test<span class=\"token operator\">:</span> lessRegex<span class=\"token punctuation\">,</span>\n      exclude<span class=\"token operator\">:</span> lessModuleRegex<span class=\"token punctuation\">,</span>\n      use<span class=\"token operator\">:</span> <span class=\"token function\">getLoaderForStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// less css modules</span>\n    config<span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      test<span class=\"token operator\">:</span> lessModuleRegex<span class=\"token punctuation\">,</span>\n      use<span class=\"token operator\">:</span> <span class=\"token function\">getLoaderForStyle</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 支持 import svg</span>\n    <span class=\"token keyword\">const</span> fileLoaderRule <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">(</span><span class=\"token parameter\">rule</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> rule<span class=\"token punctuation\">.</span>test <span class=\"token operator\">&amp;&amp;</span> rule<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".svg\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    fileLoaderRule<span class=\"token punctuation\">.</span>exclude <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.svg$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span>\n    config<span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.svg$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n      loader<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"@svgr/webpack\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> config<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>添加<code class=\"language-text\">stories/index.stories.js</code>，并写入以下内容：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> storiesOf <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@storybook/react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"./index.less\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"../dist/css/index.less\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> DemoAlert <span class=\"token keyword\">from</span> <span class=\"token string\">\"./components/alert\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> components <span class=\"token operator\">=</span> <span class=\"token function\">storiesOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Components\"</span><span class=\"token punctuation\">,</span> module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> componentsMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">Alert</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>DemoAlert <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>componentsMap<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">></span> b <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">componentsName</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    components<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>componentsName<span class=\"token punctuation\">,</span> componentsMap<span class=\"token punctuation\">[</span>componentsName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>添加 alert 组件 demo 新增 <code class=\"language-text\">stories/components/alert.jsx</code>，并写入以下内容：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Alert <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@self\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> IconBug <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@self/icon\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Demo</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Alert</span></span>\n          <span class=\"token attr-name\">showIcon</span>\n          <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>info<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Info<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContent<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> marginTop<span class=\"token operator\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Alert</span></span>\n          <span class=\"token attr-name\">showIcon</span>\n          <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>success<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Success<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContentContent<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> marginTop<span class=\"token operator\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Alert</span></span>\n          <span class=\"token attr-name\">showIcon</span>\n          <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>warning<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Warning<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Content~<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> marginTop<span class=\"token operator\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Alert</span></span>\n          <span class=\"token attr-name\">showIcon</span>\n          <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>error<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Error<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Content~<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> marginTop<span class=\"token operator\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Alert</span></span>\n          <span class=\"token attr-name\">icon</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">IconBug</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> color<span class=\"token operator\">:</span> <span class=\"token string\">\"green\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>normal<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Normal<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Content~<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> marginTop<span class=\"token operator\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Demo<span class=\"token punctuation\">;</span></code></pre></div>\n<p>最终效果如下</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/377147/1645078435801-1dee93ae-7ee6-4707-8b88-85662f4e7b1a.png#clientId=ue2c5918a-a526-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=1042&#x26;id=uc2c075bd&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=1302&#x26;originWidth=2560&#x26;originalType=binary&#x26;ratio=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=53309&#x26;status=done&#x26;style=none&#x26;taskId=u803aaa2e-6879-4312-a299-40fdfb21cf1&#x26;title=&#x26;width=2048\" alt=\"image.png\"></p>\n<h2>二，构建</h2>\n<p>组件打包逻辑已单独拆分到 <code class=\"language-text\">block-cli</code>中：<a href=\"https://github.com/block-org/block-cli\">https://github.com/block-org/block-cli</a></p>\n<p><code class=\"language-text\">block-cli</code> 会** 根据宿主环境和配置的不同将源码进行相关处理 **,主要完成以下目标：</p>\n<ol>\n<li>导出类型声明文件；</li>\n<li>导出 <code class=\"language-text\">Commonjs module</code>/<code class=\"language-text\">ES module</code> / <code class=\"language-text\">UMD</code>等多种形式产物供使用者引入；</li>\n<li>支持样式文件 <code class=\"language-text\">css</code> 引入，而非只有<code class=\"language-text\">less</code>，减少使用者接入成本；</li>\n<li>\n<p>支持组件和样式的按需加载。</p>\n<blockquote>\n<p>需要注意的是，以下使用<code class=\"language-text\">cjs</code>指代<code class=\"language-text\">Commonjs module</code>，<code class=\"language-text\">esm</code>指代<code class=\"language-text\">ES module</code></p>\n</blockquote>\n</li>\n</ol>\n<h3>block-scripts</h3>\n<p>先介绍下 <a href=\"https://github.com/block-org/block-cli\">block-org/block-cli</a> 中 <code class=\"language-text\">block-scripts</code>的总体设计思路</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"build:umd\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"block-scripts build:component:umd\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build:esm\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"block-scripts build:component:esm\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build:esm:babel\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cross-env BUILD_ENV_TS_COMPILER=babel block-scripts build:component:esm\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build:cjs\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"block-scripts build:component:cjs\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build:cjs:babel\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cross-env BUILD_ENV_TS_COMPILER=babel block-scripts build:component:cjs\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build:css\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"block-scripts build:component:css\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run clean &amp;&amp; npm run build:esm &amp;&amp; npm run build:css\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>构建部分单独拆分为子任务,具体实现拆分如下</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">program<span class=\"token punctuation\">.</span><span class=\"token function\">command</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"build:component:esm\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">action</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  component<span class=\"token punctuation\">.</span><span class=\"token function\">buildESM</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nprogram<span class=\"token punctuation\">.</span><span class=\"token function\">command</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"build:component:cjs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">action</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  component<span class=\"token punctuation\">.</span><span class=\"token function\">buildCJS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nprogram<span class=\"token punctuation\">.</span><span class=\"token function\">command</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"build:component:umd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">action</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  component<span class=\"token punctuation\">.</span><span class=\"token function\">buildUMD</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nprogram<span class=\"token punctuation\">.</span><span class=\"token function\">command</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"build:component:css\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">action</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  component<span class=\"token punctuation\">.</span><span class=\"token function\">buildCSS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>后面介绍各部实现</p>\n<h3>导出类型声明文件</h3>\n<p>既然是使用<code class=\"language-text\">typescript</code>编写的组件库，那么使用者应当享受到类型系统的好处，可以生成类型声明文件，并在<code class=\"language-text\">package.json</code>中定义入口，如下：</p>\n<p><strong>package.json</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"typings\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"lib/index.d.ts\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"build:types\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tsc -p tsconfig.build.json &amp;&amp; cpr lib esm\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>值得注意的是：此处使用<code class=\"language-text\">cpr</code>将<code class=\"language-text\">lib</code>的声明文件拷贝了一份，并将文件夹重命名为<code class=\"language-text\">esm</code>，用于后面存放 ES module 形式的组件。这样做的原因是保证用户手动按需引入组件时依旧可以获取自动提示。最开始的方式是将声明文件单独存放在<code class=\"language-text\">types</code>文件夹，但这样只有通过<code class=\"language-text\">@block-org/block-ui</code>引入才可以获取提示，而<code class=\"language-text\">@block-orgblock-ui/esm/xxx</code>和<code class=\"language-text\">@block-orgblock-ui/lib/xxx</code>就无法获取提示。</p>\n</blockquote>\n<p><strong>tsconfig.json</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"baseUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"esnext\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"commonjs\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"jsx\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"declaration\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"declarationDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"lib\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"strict\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"moduleResolution\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"allowSyntheticDefaultImports\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"esModuleInterop\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"resolveJsonModule\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token property\">\"emitDeclarationOnly\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"include\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"components\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"typings.d.ts\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"exclude\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"**/__tests__/**\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"**/demo/**\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"node_modules\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"lib\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"esm\"</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>执行<code class=\"language-text\">yarn build:types</code>，可以发现根目录下已经生成了<code class=\"language-text\">lib</code>文件夹（<code class=\"language-text\">tsconfig.json</code>中定义的<code class=\"language-text\">declarationDir</code>字段）以及<code class=\"language-text\">esm</code>文件夹（拷贝而来），目录结构与<code class=\"language-text\">components</code>文件夹保持一致，如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">├── alert\n│   ├── index.d.ts\n│   ├── alert.d.ts\n│   ├── interface.d.ts\n│   └── style\n│       └── index.d.ts\n└── index.d.ts</code></pre></div>\n<p>这样使用者引入<code class=\"language-text\">npm</code> 包时，便能得到自动提示，也能够复用相关组件的类型定义。但是这样有个问题是要单独打包 types。下面采用的办法是将<code class=\"language-text\">ts(x)</code>等文件处理成<code class=\"language-text\">js</code>文件的同时生成类型声明文件，这样就可以将两步合并为一个步骤</p>\n<h3>导出 CJS / ESM 模块</h3>\n<p>这里将 cjs / ems 模块的处理统一到 <code class=\"language-text\">compileTS</code>方法中</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">buildESM</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">compileTS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> outDir<span class=\"token operator\">:</span> <span class=\"token constant\">DIR_PATH_ESM</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"esm\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">buildCJS</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">compileTS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> outDir<span class=\"token operator\">:</span> <span class=\"token constant\">DIR_PATH_CJS</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"cjs\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>然后使用<code class=\"language-text\">babel</code>或<code class=\"language-text\">tsc</code>命令行工具进行代码编译处理（实际上很多工具库就是这样做的）</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">/**\n * Compile typescript surport TSC and Babel and more ...\n * @param options\n * @returns\n */</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">compileTS</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>options<span class=\"token operator\">:</span> CompileOptions<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  print<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[block-scripts]\"</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Start to build </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>options<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> module...</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token constant\">BUILD_ENV_TS_COMPILER</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"babel\"</span> <span class=\"token operator\">?</span> <span class=\"token function\">withBabel</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">withTSC</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n      print<span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[block-scripts]\"</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Build </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>options<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> module success!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> error<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>这里有个问题是 ts options 从何而来，并且 如何处理 ts options ？</p>\n</blockquote>\n<p>首先，根目录下维护了一份各种模式下输入/输出的常量(已作为默认值)</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">CWD</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span><span class=\"token function\">cwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">DIR_NAME_ESM</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"esm\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">DIR_NAME_CJS</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"lib\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">DIR_NAME_UMD</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">DIR_NAME_ASSET</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"asset\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">DIR_NAME_SOURCE</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"src\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">DIR_NAME_COMPONENT_LIBRARY</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"components\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">FILENAME_DIST_LESS</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"index.less\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">FILENAME_DIST_CSS</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"index.css\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">FILENAME_STYLE_ENTRY_RAW</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"index.js\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">FILENAME_STYLE_ENTRY_CSS</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"css.js\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">BLOCK_LIBRARY_PACKAGE_NAME_REACT</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"@block-org/block-ui\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>先看<code class=\"language-text\">tsc</code>的封装<code class=\"language-text\">withTSC</code></p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">/**\n * Build TS with TSC\n * @param param0\n * @returns\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">withTSC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> type<span class=\"token punctuation\">,</span> outDir<span class=\"token punctuation\">,</span> watch <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> CompileOptions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> compilerOptions <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">getTSConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> module <span class=\"token operator\">=</span> type <span class=\"token operator\">===</span> <span class=\"token string\">\"esm\"</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"es6\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"commonjs\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Read module filed from the default configuration (es6 / es2020 / esnext)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>type <span class=\"token operator\">===</span> <span class=\"token string\">\"esm\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> regexpESM <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^esm</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">i</span></span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">typeof</span> tscConfig<span class=\"token punctuation\">.</span>module <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span> <span class=\"token operator\">&amp;&amp;</span>\n      regexpESM<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>tscConfig<span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      module <span class=\"token operator\">=</span> tscConfig<span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">typeof</span> compilerOptions<span class=\"token operator\">?.</span>module <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span> <span class=\"token operator\">&amp;&amp;</span>\n      regexpESM<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>compilerOptions<span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      module <span class=\"token operator\">=</span> compilerOptions<span class=\"token punctuation\">.</span>module<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> tsc<span class=\"token punctuation\">.</span><span class=\"token function\">compile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>tscConfig<span class=\"token punctuation\">,</span>\n    module<span class=\"token punctuation\">,</span>\n    outDir<span class=\"token punctuation\">,</span>\n    watch<span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>watch<span class=\"token punctuation\">,</span>\n    declaration<span class=\"token operator\">:</span> type <span class=\"token operator\">===</span> <span class=\"token string\">\"esm\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>ts options 的核心就是递归向上遍历 <code class=\"language-text\">tsconfig.json</code>并就近合并 ,如下</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">/**\n * Get config from pre / root project tsconfig.json ...\n * @param tsconfigPath\n * @param subConfig\n * @returns\n */</span>\n<span class=\"token keyword\">const</span> getTSConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  tsconfigPath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token constant\">CWD</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tsconfig.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  subConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> compilerOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">pathExistsSync</span><span class=\"token punctuation\">(</span>tsconfigPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readJsonSync</span><span class=\"token punctuation\">(</span>tsconfigPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> compilerOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>config <span class=\"token operator\">&amp;&amp;</span> config<span class=\"token punctuation\">.</span>compilerOptions<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> subCompilerOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>subConfig <span class=\"token operator\">&amp;&amp;</span> subConfig<span class=\"token punctuation\">.</span>compilerOptions<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Avoid overwriting of the compilation options of subConfig</span>\n    subConfig<span class=\"token punctuation\">.</span>compilerOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>compilerOptions<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>subCompilerOptions <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">,</span> subConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>extends<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">getTSConfig</span><span class=\"token punctuation\">(</span>\n        path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">dirname</span><span class=\"token punctuation\">(</span>tsconfigPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>extends<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        config\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> config<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>subConfig <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">tscConfig</code> 来自于<code class=\"language-text\">/config/tsc.config</code>的 <code class=\"language-text\">getConfigProcessor</code>,会根据 type 匹配 组件库（用户）目录下<code class=\"language-text\">.config</code>对应类型的配置</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">/**\n * Get project .config/ processor\n * @param configType\n * @returns\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token generic-function\"><span class=\"token function\">getConfigProcessor</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">Function</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>\n  configType<span class=\"token operator\">:</span> <span class=\"token string\">\"jest\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"webpack\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"babel\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"docgen\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"style\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"tsc\"</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">T</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> configFilePath <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">CWD</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/.config/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>configType<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.config.js</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> processor <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">existsSync</span><span class=\"token punctuation\">(</span>configFilePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      processor <span class=\"token operator\">=</span> <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>configFilePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      print<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"[block-scripts]\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Failed to extend configuration from </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>configFilePath<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      process<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> processor<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>综上，配置优先级别为 <code class=\"language-text\">组件库/用户目录</code>> <code class=\"language-text\">blocks-script子包</code>> <code class=\"language-text\">block-org根</code></p>\n<p>下面着重看下 <code class=\"language-text\">babel</code>编译 <code class=\"language-text\">tsx</code>的处理，<code class=\"language-text\">withBabel.ts</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">/**\n * Build TS with babel\n * @param param0\n * @returns\n */</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">withBabel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> type<span class=\"token punctuation\">,</span> outDir<span class=\"token punctuation\">,</span> watch <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> CompileOptions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> tsconfig <span class=\"token operator\">=</span> <span class=\"token function\">getTSConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// The base path of the matching directory patterns</span>\n  <span class=\"token keyword\">const</span> srcPath <span class=\"token operator\">=</span> tsconfig<span class=\"token punctuation\">.</span>include<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\/[^/]*$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> targetPath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token constant\">CWD</span><span class=\"token punctuation\">,</span> outDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">transform</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token function\">babelTransform</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span>contents<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span>babelConfig<span class=\"token punctuation\">,</span>\n      filename<span class=\"token operator\">:</span> file<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// Ignore the external babel.config.js and directly use the current incoming configuration</span>\n      configFile<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createStream</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>globs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n\n    <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token builtin\">Promise</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> patterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n      path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>srcPath<span class=\"token punctuation\">,</span> <span class=\"token string\">\"**/*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">!</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>srcPath<span class=\"token punctuation\">,</span> <span class=\"token string\">\"**/demo{,/**}\"</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">!</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>srcPath<span class=\"token punctuation\">,</span> <span class=\"token string\">\"**/__test__{,/**}\"</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">!</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>srcPath<span class=\"token punctuation\">,</span> <span class=\"token string\">\"**/*.md\"</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">!</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>srcPath<span class=\"token punctuation\">,</span> <span class=\"token string\">\"**/*.mdx\"</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">createStream</span><span class=\"token punctuation\">(</span>patterns<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"end\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>watch<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        print<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>\n          <span class=\"token string\">\"[block-scripts]\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Start watching file in </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>srcPath<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">CWD</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">...</span><span class=\"token template-punctuation string\">`</span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// https://www.npmjs.com/package/chokidar</span>\n        <span class=\"token keyword\">const</span> watcher <span class=\"token operator\">=</span> chokidar<span class=\"token punctuation\">.</span><span class=\"token function\">watch</span><span class=\"token punctuation\">(</span>patterns<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n          ignoreInitial<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> files <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> debouncedCompileFiles <span class=\"token operator\">=</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>files<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">createStream</span><span class=\"token punctuation\">(</span>files<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        watcher<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"all\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">,</span> fullPath<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          print<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>\n            <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">[</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>event<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">] </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>fullPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">CWD</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span><span class=\"token function\">existsSync</span><span class=\"token punctuation\">(</span>fullPath<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">statSync</span><span class=\"token punctuation\">(</span>fullPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>files<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>fullPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              files<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>fullPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token function\">debouncedCompileFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>通过<code class=\"language-text\">createStream</code>方法匹配所有文件模式创建流并执行编译<code class=\"language-text\">transform</code>方法,如果开启了 <code class=\"language-text\">watch</code>模式会在当次执行完成后监听文件的变化并重新执行 <code class=\"language-text\">createStream</code>方法并做了防抖处理</p>\n<p><code class=\"language-text\">createStream</code>方法使用 <code class=\"language-text\">gulp</code>的流式处理，见下</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createStream</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>globs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// https://www.npmjs.com/package/vinyl-fs</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    vfs\n      <span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span>globs<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        allowEmpty<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        base<span class=\"token operator\">:</span> srcPath<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">// https://www.npmjs.com/package/gulp-plumber</span>\n      <span class=\"token comment\">// https://www.npmjs.com/package/through2</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>watch <span class=\"token operator\">?</span> <span class=\"token function\">gulpPlumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> through<span class=\"token punctuation\">.</span><span class=\"token function\">obj</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n        <span class=\"token function\">gulpIf</span><span class=\"token punctuation\">(</span>\n          <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> path <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.tsx?$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// https://www.npmjs.com/package/gulp-typescript</span>\n          <span class=\"token comment\">// Delete outDir to avoid static resource resolve errors during the babel compilation of next step</span>\n          <span class=\"token function\">gulpTS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>tsconfig<span class=\"token punctuation\">.</span>compilerOptions<span class=\"token punctuation\">,</span> outDir<span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n        <span class=\"token function\">gulpIf</span><span class=\"token punctuation\">(</span>\n          <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> path <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".d.ts\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.(t|j)sx?$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          through<span class=\"token punctuation\">.</span><span class=\"token function\">obj</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n              file<span class=\"token punctuation\">.</span>contents <span class=\"token operator\">=</span> Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token comment\">// .jsx -> .js</span>\n              file<span class=\"token punctuation\">.</span>path <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">extname</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              print<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[block-scripts]\"</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Failed to compile </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>file<span class=\"token punctuation\">.</span>path<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              print<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>vfs<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span>targetPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>为什么是 <code class=\"language-text\">gulp</code> 而不是 <code class=\"language-text\">webpack</code> 或 <code class=\"language-text\">rollup</code> ？因为要做的是代码编译而非代码打包，同时需要考虑到<strong>样式处理及其按需加载</strong>。</p>\n</blockquote>\n<h3>导出 UMD 模块</h3>\n<p>这部分使用 <code class=\"language-text\">webpack</code>进行打包，相关插件和配置较为繁琐，优化细节较多，这里不赘述了，<a href=\"https://github.com/block-org/block-cli/blob/master/packages/block-scripts/src/config/webpack/conponent.ts\">源码查看</a></p>\n<h3>处理样式文件</h3>\n<p>在 <code class=\"language-text\">block-script</code>中入口函数是 <code class=\"language-text\">buildCSS</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">buildCSS</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  print<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[block-scripts]\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Start to build css...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">buildStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> print<span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[block-scripts]\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Build css success!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> error<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>核心实现都在 <code class=\"language-text\">buildStyle</code>方法中:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">/**\n * Build style\n * @returns\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    gulp<span class=\"token punctuation\">.</span><span class=\"token function\">series</span><span class=\"token punctuation\">(</span>\n      gulp<span class=\"token punctuation\">.</span><span class=\"token function\">parallel</span><span class=\"token punctuation\">(</span>\n        copyAsset<span class=\"token punctuation\">,</span>\n        copyFileWatched<span class=\"token punctuation\">,</span>\n        compileLess<span class=\"token punctuation\">,</span>\n        handleStyleJSEntry\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      gulp<span class=\"token punctuation\">.</span><span class=\"token function\">parallel</span><span class=\"token punctuation\">(</span>distLess<span class=\"token punctuation\">,</span> <span class=\"token function\">distCss</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      gulp<span class=\"token punctuation\">.</span><span class=\"token function\">parallel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>为了同时执行多个子任务这里又借助了<code class=\"language-text\">gulp.series()</code> 和 <code class=\"language-text\">gulp.parallel()</code>.其中编译配置会优先使用组件库目录<code class=\"language-text\">.config</code>下的配置逻辑和处理 ts 文件一致。下面依次介绍各个任务的细节</p>\n<p><code class=\"language-text\">copyAsset</code>方法：匹配文件模式到指定目录</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">/**\n * Match the resource that matches the entry glob and copy it to the /asset\n * @returns Stream\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">copyAsset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> gulp\n    <span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span>assetConfig<span class=\"token punctuation\">.</span>entry<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> allowEmpty<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span>assetConfig<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">copyFileWatched</code>方法：将监听目录的文件拷贝到 esm/lib 下 入图片字体等</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token operator\">**</span>\n <span class=\"token operator\">*</span> Copy the files that need to be monitored to the esm<span class=\"token operator\">/</span>lib directory\n <span class=\"token operator\">*</span> <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">returns</span></span>\n <span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">copyFileWatched</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> patternArray <span class=\"token operator\">=</span> cssConfig<span class=\"token punctuation\">.</span>watch<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> destDirs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>cssConfig<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>esm<span class=\"token punctuation\">,</span> cssConfig<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>cjs<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>destDirs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token builtin\">Promise</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> stream<span class=\"token operator\">:</span> NodeJS<span class=\"token punctuation\">.</span>ReadWriteStream <span class=\"token operator\">=</span> <span class=\"token function\">mergeStream</span><span class=\"token punctuation\">(</span>\n        patternArray<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n          gulp<span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> allowEmpty<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> base<span class=\"token operator\">:</span> cssConfig<span class=\"token punctuation\">.</span>watchBase<span class=\"token punctuation\">[</span>pattern<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      destDirs<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        stream <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      stream<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">,</span> resolve<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        print<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[block-scripts]'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Failed to build css, error in copying files'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token builtin\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">compileLes</code>方法：编译 less 文件并输出到 esm / lib 目录下</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">/**\n * Compile less, and output css to at esm/lib\n * @returns\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">compileLess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> destDirs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>cssConfig<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>esm<span class=\"token punctuation\">,</span> cssConfig<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>cjs<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> path\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>destDirs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> stream <span class=\"token operator\">=</span> gulp\n      <span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span>cssConfig<span class=\"token punctuation\">.</span>entry<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> allowEmpty<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>cssConfig<span class=\"token punctuation\">.</span><span class=\"token function\">compiler</span><span class=\"token punctuation\">(</span>cssConfig<span class=\"token punctuation\">.</span>compilerOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">cleanCSS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    destDirs<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      stream <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> stream<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      print<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"[block-scripts]\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"Failed to build css, error in compiling less\"</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token builtin\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">handleStyleJSEntry</code>方法：处理样式入口(css.js/index.js)并注入依赖的样式</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">handleStyleJSEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">compileCssJsEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    styleJSEntry<span class=\"token operator\">:</span> jsEntryConfig<span class=\"token punctuation\">.</span>entry<span class=\"token punctuation\">,</span>\n    outDirES<span class=\"token operator\">:</span> cssConfig<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>esm<span class=\"token punctuation\">,</span>\n    outDirCJS<span class=\"token operator\">:</span> cssConfig<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>cjs<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jsEntryConfig<span class=\"token punctuation\">.</span>autoInjectBlockDep<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">injectBlockDepStyle</span><span class=\"token punctuation\">(</span><span class=\"token function\">getComponentDirPattern</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token constant\">DIR_NAME_ESM</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">renameStyleEntryFilename</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Generate /style/css.js\n */</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">compileCssJsEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  styleJSEntry<span class=\"token punctuation\">,</span>\n  outDirES<span class=\"token punctuation\">,</span>\n  outDirCJS<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/** Glob of css entry file */</span>\n  styleJSEntry<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Path of ESM */</span>\n  outDirES<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Path of CJS */</span>\n  outDirCJS<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">distLess</code>方法：dist 目录 less 生成</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">/**\n * Dist all less files to dist\n * @param cb\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">distLess</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> path<span class=\"token operator\">:</span> distPath<span class=\"token punctuation\">,</span> rawFileName <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> cssConfig<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>dist<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> entries <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  cssConfig<span class=\"token punctuation\">.</span>entry<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    entries <span class=\"token operator\">=</span> entries<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>glob<span class=\"token punctuation\">.</span><span class=\"token function\">sync</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>entries<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> texts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    entries<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Remove the first level directory</span>\n      <span class=\"token keyword\">const</span> esEntry <span class=\"token operator\">=</span> cssConfig<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>esm <span class=\"token operator\">+</span> entry<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> relativePath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">relative</span><span class=\"token punctuation\">(</span>distPath<span class=\"token punctuation\">,</span> esEntry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">@import \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>relativePath<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\";</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>esEntry<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>cssConfig<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>esm<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/style</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        texts<span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        texts<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    fs<span class=\"token punctuation\">.</span><span class=\"token function\">outputFileSync</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>distPath<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>rawFileName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> texts<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">distCss</code>方法：dist 目录 css 生成</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">/**\n * Compile the packaged less into css\n * @param isDev\n * @returns\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">distCss</span><span class=\"token punctuation\">(</span>isDev<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> path<span class=\"token operator\">:</span> distPath<span class=\"token punctuation\">,</span> rawFileName<span class=\"token punctuation\">,</span> cssFileName <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> cssConfig<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>dist<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> needCleanCss <span class=\"token operator\">=</span>\n    <span class=\"token operator\">!</span>isDev <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token constant\">BUILD_ENV_MODE</span> <span class=\"token operator\">||</span> <span class=\"token constant\">BUILD_ENV_MODE</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"production\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> stream <span class=\"token operator\">=</span> gulp\n    <span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>distPath<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>rawFileName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> allowEmpty<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>cssConfig<span class=\"token punctuation\">.</span><span class=\"token function\">compiler</span><span class=\"token punctuation\">(</span>cssConfig<span class=\"token punctuation\">.</span>compilerOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Errors should be thrown, otherwise it will cause the program to exit</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isDev<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">notifyLessCompileResult</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> stream\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n      <span class=\"token comment\">// The less file in the /dist is packaged from the less file in /esm, so its static resource path must start with ../esm</span>\n      <span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">(\\.{2}\\/)+</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>cssConfig<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>esm<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"g\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        path<span class=\"token punctuation\">.</span><span class=\"token function\">relative</span><span class=\"token punctuation\">(</span>cssConfig<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>dist<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">,</span> assetConfig<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">gulpIf</span><span class=\"token punctuation\">(</span>needCleanCss<span class=\"token punctuation\">,</span> <span class=\"token function\">cleanCSS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">rename</span><span class=\"token punctuation\">(</span>cssFileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span>distPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      print<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"[block-scripts]\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"Failed to build css, error in dist all css\"</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>一套组合拳下来就实现了组件和样式的分离，dist 目录主要是为 umd 预留。现在用户就可以通过<code class=\"language-text\">block-ui/esm[lib]/alert/style/index.less</code>的形式按需引入 less 样式。或者，通过<code class=\"language-text\">block-ui/esm[lib]/alert/style/css.js</code>的形式按需引入 css 样式，如下</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">├── alert\n│   ├── index<span class=\"token punctuation\">.</span>js\n│   ├── <span class=\"token keyword\">interface</span><span class=\"token punctuation\">.</span>js\n│   ├── <span class=\"token keyword\">interface</span><span class=\"token punctuation\">.</span>d<span class=\"token punctuation\">.</span>js\n│   └── style\n│       ├── css<span class=\"token punctuation\">.</span>js # css 依赖\n│       ├── index<span class=\"token punctuation\">.</span>js # less 依赖\n│       ├── index<span class=\"token punctuation\">.</span>css # css 样式\n│       └── index<span class=\"token punctuation\">.</span>less # less 样式\n└── index<span class=\"token punctuation\">.</span>js</code></pre></div>\n<blockquote>\n<p>值得注意的问题：为什么要提供 index.js 和 css.js 文件?若使用者没有使用<code class=\"language-text\">less</code>预处理器，使用的是<code class=\"language-text\">sass</code>方案甚至原生<code class=\"language-text\">css</code>方案，如何平衡开发者和用户的成本?</p>\n</blockquote>\n<p>理由如下：</p>\n<ol>\n<li>当然，组件库会打包出一份完整的 <code class=\"language-text\">css</code> 文件，进行<strong>全量</strong>引入，无法进行<strong>按需引入</strong>；</li>\n<li>按需 引用 less 样式（通过<code class=\"language-text\">block-ui/esm[lib]/alert/style/index.less</code>的形式按需引入 less 样式）增加<code class=\"language-text\">less-loader</code>,会导致使用成本增加；</li>\n<li>提供一份<code class=\"language-text\">style/css.js</code>文件，引入组件 <code class=\"language-text\">css</code>样式依赖，而非 <code class=\"language-text\">less</code> 依赖，可以帮助<strong>管理样式依赖 **（每个组件都与自己的样式绑定，不需要使用者或组件开发者去</strong>维护样式依赖**），可以以抹平组件库底层差异,既可以保障组件库开发者的开发体验 又能够使用者的使用成本</li>\n</ol>\n<h3>按需加载</h3>\n<p>在 package.json 中增加<code class=\"language-text\">sideEffects</code>属性，配合<code class=\"language-text\">ES module</code>达到<code class=\"language-text\">tree shaking</code>效果（将样式依赖文件标注为<code class=\"language-text\">side effects</code>，避免被误删除）。</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token comment\">// ...</span>\n<span class=\"token property\">\"sideEffects\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token string\">\"dist/*\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"esm/**/style/*\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"lib/**/style/*\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"*.less\"</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// ...</span></code></pre></div>\n<p>使用以下方式引入，可以做到<code class=\"language-text\">js</code>部分的按需加载，但需要手动引入样式：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Alert <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@block-org/block-ui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@block-org/block-ui/esm/alert/style\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>也可以使用以下方式引入：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> Alert <span class=\"token keyword\">from</span> <span class=\"token string\">\"@block-org/block-uiesm/alert\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// or</span>\n<span class=\"token comment\">// import Alert from '@block-org/block-ui/lib/alert';</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@block-org/block-ui/esm/alert/style\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>以上引入样式文件的方式不太优雅，直接入口处引入<strong>全量</strong>样式文件又和按需加载的本意相去甚远。</p>\n<p>使用者可以借助 <a href=\"https://www.npmjs.com/package/babel-plugin-import\">babel-plugin-import</a> 来进行辅助，减少代码编写量（还是增加了使用成本）</p>\n<h2>三，测试</h2>\n<p>本节主要讲述如何在组件库中引入<a href=\"https://jestjs.io/\">jest</a>以及<a href=\"https://testing-library.com/docs/react-testing-library/intro\">@testing-library/react</a>，而不会深入单元测试的学习，也不会集成到<code class=\"language-text\">block-ui</code>中</p>\n<p>如果你对下列问题感兴趣：</p>\n<ol>\n<li>What-单元测试是什么？</li>\n<li>Why-为什么要写单元测试？</li>\n<li>How-编写单元测试的最佳实践？</li>\n</ol>\n<p>那么可以看看以下文章：</p>\n<ul>\n<li><a href=\"https://thomlom.dev/test-react-testing-library/\">Test React apps with React Testing Library</a>：通过一个<code class=\"language-text\">&lt;Counter /></code>的例子延伸，阐述了选择<code class=\"language-text\">React Testing Library</code>而非<code class=\"language-text\">Enzyme</code>的理由，并对其进行了一些入门教学；</li>\n<li><a href=\"https://testing-library.com/docs/react-testing-library/intro\">React Testing Library</a>：<code class=\"language-text\">@testing-library/react</code>的官方文档，该库提供的 API 在某个程度上就是在指引开发者进行单元测试的最佳实践；</li>\n<li><a href=\"https://testing-library.com/docs/recipes\">React Testing Library-examples</a>：<code class=\"language-text\">@testing-library/react</code>的一些实例，提供了各种常见场景的测试；</li>\n<li><a href=\"https://github.com/linesh-simplicity/linesh-simplicity.github.io/issues/200\">React 单元测试策略及落地</a>：如标题所示，值得一看。</li>\n</ul>\n<h3>相关配置</h3>\n<p>安装依赖：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> jest ts-jest @testing-library/react @testing-library/jest-dom identity-obj-proxy @types/jest @types/testing-library__react -D</code></pre></div>\n<ul>\n<li><a href=\"https://jestjs.io/\">jest</a>: JavaScript 测试框架，专注于简洁明快；</li>\n<li><a href=\"https://github.com/kulshekhar/ts-jest\">ts-jest</a>：为<code class=\"language-text\">TypeScript</code>编写<code class=\"language-text\">jest</code>测试用例提供支持；</li>\n<li><a href=\"https://testing-library.com/docs/react-testing-library/intro\">@testing-library/react</a>：简单而完整的<code class=\"language-text\">React DOM</code>测试工具，鼓励良好的测试实践；</li>\n<li><a href=\"https://testing-library.com/docs/ecosystem-jest-dom\">@testing-library/jest-dom</a>：自定义的<code class=\"language-text\">jest</code>匹配器(<code class=\"language-text\">matchers</code>)，用于测试<code class=\"language-text\">DOM</code>的状态（即为<code class=\"language-text\">jest</code>的<code class=\"language-text\">except</code>方法返回值增加更多专注于<code class=\"language-text\">DOM</code>的<code class=\"language-text\">matchers</code>）；</li>\n<li><a href=\"https://www.npmjs.com/package/identity-obj-proxy\">identity-obj-proxy</a>：一个工具库，此处用来<code class=\"language-text\">mock</code>样式文件。</li>\n</ul>\n<p>新建<code class=\"language-text\">jest.config.js</code>，并写入相关配置，更多配置可参考<a href=\"https://jestjs.io/docs/en/configuration\">jest 官方文档-配置</a>，只看几个常用的就可以。</p>\n<p><strong>jest.config.js</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  verbose<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  roots<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"&lt;rootDir>/src\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  moduleNameMapper<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"\\\\.(css|less|scss)$\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"identity-obj-proxy\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"^src$\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;rootDir>/src/index.tsx\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"^src(.*)$\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;rootDir>/src/$1\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  testRegex<span class=\"token operator\">:</span> <span class=\"token string\">\"(/test/.*|\\\\.(test|spec))\\\\.(ts|tsx|js)$\"</span><span class=\"token punctuation\">,</span>\n  moduleFileExtensions<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"ts\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tsx\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"js\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"jsx\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  testPathIgnorePatterns<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"/node_modules/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/lib/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/esm/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/dist/\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  preset<span class=\"token operator\">:</span> <span class=\"token string\">\"ts-jest\"</span><span class=\"token punctuation\">,</span>\n  testEnvironment<span class=\"token operator\">:</span> <span class=\"token string\">\"jsdom\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>修改<code class=\"language-text\">package.json</code>，增加测试相关命令，并且代码提交前，跑测试用例，如下：\n<strong>package.json</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\">\"scripts\": {\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span> ...\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>  \"test\": \"jest\",                         # 执行jest\n<span class=\"token prefix inserted\">+</span>  \"test:watch\": \"jest --watch\",           # watch模式下执行\n<span class=\"token prefix inserted\">+</span>  \"test:coverage\": \"jest --coverage\",     # 生成测试覆盖率报告\n<span class=\"token prefix inserted\">+</span>  \"test:update\": \"jest --updateSnapshot\"  # 更新快照\n</span>},\n...\n\"lint-staged\": {\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span> \"src/**/*.ts?(x)\": [\n<span class=\"token prefix unchanged\"> </span>   \"prettier --write\",\n<span class=\"token prefix unchanged\"> </span>   \"eslint --fix\",\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>   \"jest --bail --findRelatedTests\",\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>   \"git add\"\n<span class=\"token prefix unchanged\"> </span> ],\n<span class=\"token prefix unchanged\"> </span> ...\n</span>}</code></pre></div>\n<p>修改<code class=\"language-text\">gulpfile.js</code>以及<code class=\"language-text\">tsconfig.json</code>，避免打包时，把测试文件一并处理了。\n<strong>gulpfile.js</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\">const paths = {\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span> ...\n</span><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span> scripts: ['src/**/*.{ts,tsx}', '!src/**/demo/*.{ts,tsx}'],\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span> scripts: [\n<span class=\"token prefix inserted\">+</span>   'src/**/*.{ts,tsx}',\n<span class=\"token prefix inserted\">+</span>   '!src/**/demo/*.{ts,tsx}',\n<span class=\"token prefix inserted\">+</span>   '!src/**/__tests__/*.{ts,tsx}',\n<span class=\"token prefix inserted\">+</span> ],\n</span>};</code></pre></div>\n<p><strong>tsconfig.json</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\">{\n<span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span> \"exclude\": [\"src/**/demo\"]\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span> \"exclude\": [\"src/**/demo\", \"src/**/__tests__\"]\n</span>}</code></pre></div>\n<h3>编写测试用例</h3>\n<p><code class=\"language-text\">&lt;Alert /></code>比较简单，此处只作示例用，简单进行一下快照测试。</p>\n<p>在对应组件的文件夹下新建<code class=\"language-text\">__tests__</code>文件夹，用于存放测试文件，其内新建<code class=\"language-text\">index.test.tsx</code>文件，写入以下测试用例：</p>\n<p><strong>src/alert/</strong>tests<strong>/index.test.tsx</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@testing-library/react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Alert <span class=\"token keyword\">from</span> <span class=\"token string\">\"../alert\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;Alert />\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"should render default\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> container <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Alert</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">default</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Alert</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"should render alert with type\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> types<span class=\"token operator\">:</span> any<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"info\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"warning\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"success\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> getByText <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>types<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">k</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Alert</span></span> <span class=\"token attr-name\">type</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>k<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>k<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token punctuation\">{</span>k<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Alert</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    types<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">k</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token function\">getByText</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>更新一下快照：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> test:update</code></pre></div>\n<p>可以看见同级目录下新增了一个<code class=\"language-text\">__snapshots__</code>文件夹，里面存放对应测试用例的快照文件。\n再执行测试用例：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token builtin class-name\">test</span></code></pre></div>\n<p>可以发现通过了测试用例，主要是后续我们进行迭代重构时，都会重新执行测试用例，与最近的一次快照进行比对，如果与快照不一致（结构发生了改变），那么相应的测试用例就无法通过。</p>\n<p>对于快照测试，褒贬不一，这个例子也着实简单得很，甚至连扩展的 <code class=\"language-text\">jest-dom</code>提供的 <code class=\"language-text\">matchers</code> 都没用上。</p>\n<h2>四，站点</h2>\n<p>站点搭建可选项挺多，国内的 <code class=\"language-text\">Dumi</code> 国外的 <code class=\"language-text\">Next.js</code> <code class=\"language-text\">Gatsby.js</code> ，或者自己写一套，这里采用 <code class=\"language-text\">Next.js</code></p>\n<h3>集成 Next.js</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">npx create-next-app@latest --typescript\n<span class=\"token comment\"># or</span>\n<span class=\"token function\">yarn</span> create next-app --typescript</code></pre></div>\n<p>针对 <code class=\"language-text\">site</code> 目录下站点应用增加 <code class=\"language-text\">npm scripts</code> 至 <code class=\"language-text\">site/package.json</code></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run collect-meta &amp;&amp; next dev\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run collect-meta &amp;&amp; next build\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"next start\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"lint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"next lint\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"collect-meta\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node ../scripts/collect-meta.js\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<h3>站点骨架</h3>\n<p>这一步主要是处理站点首页、组件文档、快速开始、指南、定制化等，页面级路由都会放在站点根目录 <code class=\"language-text\">pages</code> 文件夹下。</p>\n<p>目录结构</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">├── lib                       # library 公共依赖\n    ├── components            # 公共组件\n    ├── data                  # 数据\n    ├── <span class=\"token operator\">...</span>                   # 其他文件\n├── page                      # 页面级路由\n    ├── zh<span class=\"token operator\">-</span>cn                 # 国际化\n    ├── en<span class=\"token operator\">-</span>us                 # 国际化\n        ├── components        # 组件文档\n        ├── customization     # 定制化\n        ├── guide             # 快速上手\n        ├── index             # 首页\n    ├── _app<span class=\"token punctuation\">.</span>ts               # 页面配置\n└── next<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>js            # 站点配置</code></pre></div>\n<p>站点启动前会执行 <code class=\"language-text\">collect-meta</code>指令收集 <code class=\"language-text\">pages</code>目录下的所有的 <code class=\"language-text\">.md(x)</code>文件做一层转换并分组并生成一份路由 meta 信息 放在 <code class=\"language-text\">lib/data</code>下</p>\n<p>在 <code class=\"language-text\">pages/**/*.md(x)</code>定义 meta 信息</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//...</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> meta <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  title<span class=\"token operator\">:</span> <span class=\"token string\">\"Alert\"</span><span class=\"token punctuation\">,</span>\n  group<span class=\"token operator\">:</span> <span class=\"token string\">\"General\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//...</span></code></pre></div>\n<p><code class=\"language-text\">scripts/collect-meta.js</code>核心逻辑</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ['en-us','zh-cn']</span>\n    <span class=\"token keyword\">const</span> locales <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readdir</span><span class=\"token punctuation\">(</span>pagePrefix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> fullPath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>pagePrefix<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">statSync</span><span class=\"token punctuation\">(</span>fullPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 收集并转换数据</span>\n    <span class=\"token keyword\">const</span> sortdMetaData <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span>\n      locales<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> currentLocale <span class=\"token operator\">=</span> metaLocales<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// '/usr/github_repos/block-ui/site/pages/en-us'</span>\n        <span class=\"token keyword\">const</span> dir <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>pagePrefix<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// ['components', 'customization', 'guide', 'index.tsx']</span>\n        <span class=\"token keyword\">const</span> childDirs <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readdir</span><span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 递归遍历收集 meta 信息</span>\n        <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getMetadata</span><span class=\"token punctuation\">(</span>childDirs<span class=\"token punctuation\">,</span> dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> sorted <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> weights<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> weights<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> translatedData <span class=\"token operator\">=</span> <span class=\"token function\">deepTranslate</span><span class=\"token punctuation\">(</span>sorted<span class=\"token punctuation\">,</span> currentLocale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n          name<span class=\"token punctuation\">,</span>\n          content<span class=\"token operator\">:</span> translatedData<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 写入数据</span>\n    <span class=\"token keyword\">await</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span>\n      sortdMetaData<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> targetPath <span class=\"token operator\">=</span> <span class=\"token function\">getTargetPath</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">await</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">ensureFile</span><span class=\"token punctuation\">(</span>targetPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">await</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">writeJson</span><span class=\"token punctuation\">(</span>targetPath<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    process<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>最终按照 <code class=\"language-text\">/local/folder/title</code>的格式生成路由，比如 <code class=\"language-text\">/en-us/components/alert</code>;一旦<code class=\"language-text\">pages</code>目录变化页面路由就会动态更新</p>\n<p>最终站点如下</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/377147/1645075579026-c3b69b6e-791d-4e28-ba37-fea87ceafa1a.png#clientId=ue2c5918a-a526-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=1039&#x26;id=UU5GE&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=1299&#x26;originWidth=2560&#x26;originalType=binary&#x26;ratio=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=100564&#x26;status=done&#x26;style=none&#x26;taskId=u1bf61c3c-2430-461e-bd69-ef043decb2c&#x26;title=&#x26;width=2048\" alt=\"image.png\"></p>\n<h3>文档补全</h3>\n<p>集成 <code class=\"language-text\">mdx</code>修改<code class=\"language-text\">next.config.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Use MDX with Next.js</span>\n<span class=\"token keyword\">const</span> withMDX <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@next/mdx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  extension<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.(md|mdx)?$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n  options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    rehypePlugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@mapbox/rehype-prism\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rehype-join-line\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Nextjs config -> https://nextjs.org/docs/api-reference/next.config.js/introduction</span>\n<span class=\"token comment\">/** @type {import('next').NextConfig} */</span>\n<span class=\"token keyword\">const</span> nextConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">withMDX</span><span class=\"token punctuation\">(</span>nextConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>经过前面的操作，可以愉快地进行文档的开发了，例如添加 <code class=\"language-text\">alert</code>组件的文档 <code class=\"language-text\">en-us/components/alert.mdx</code></p>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre class=\"language-markdown\"><code class=\"language-markdown\">import Layout from '../../../lib/components/layout';\nimport { Alert } from '../../../../esm';\n\nexport const meta = {\ntitle: 'Alert',\ngroup: 'General',\n};\n\n<span class=\"token title important\"><span class=\"token punctuation\">##</span> Alert</span>\n\nUse <span class=\"token code-snippet code keyword\">`banner = true`</span> to display Alert as a banner on top of the page.\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Alert</span>\n    <span class=\"token attr-name\">banner</span>\n    <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>info<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">showIcon</span>\n    <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>General text<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token value css language-css\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span></span></span></span> <span class=\"token attr-name\"><span class=\"token namespace\">marginTop:</span></span> <span class=\"token attr-name\">4,</span> <span class=\"token attr-name\"><span class=\"token namespace\">marginBottom:</span></span> <span class=\"token attr-name\">20</span> <span class=\"token attr-name\">}}</span>\n  <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Alert</span> <span class=\"token attr-name\">banner</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>info<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">showIcon</span> <span class=\"token attr-name\">closable</span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>General text<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token value css language-css\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span></span></span></span> <span class=\"token attr-name\"><span class=\"token namespace\">marginBottom:</span></span> <span class=\"token attr-name\">20</span> <span class=\"token attr-name\">}}</span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Alert</span>\n    <span class=\"token attr-name\">banner</span>\n    <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>info<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">showIcon</span>\n    <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>General text<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Here is an example text<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token value css language-css\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span></span></span></span> <span class=\"token attr-name\"><span class=\"token namespace\">marginBottom:</span></span> <span class=\"token attr-name\">20</span> <span class=\"token attr-name\">}}</span>\n  <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Alert</span> <span class=\"token attr-name\">banner</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>success<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">showIcon</span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Success text<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token value css language-css\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span></span></span></span> <span class=\"token attr-name\"><span class=\"token namespace\">marginBottom:</span></span> <span class=\"token attr-name\">20</span> <span class=\"token attr-name\">}}</span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\nexport default ({ children }) => <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Layout</span> <span class=\"token attr-name\">meta</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>{meta}</span><span class=\"token punctuation\">></span></span>{children}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Layout</span><span class=\"token punctuation\">></span></span>;</code></pre></div>\n<p>只需再补充一些组件定义，这篇 markdown 就是所需要的最终组件文档</p>\n<blockquote>\n<p>为什么在 markdown 中可以渲染 React 组件？可以去了解 <a href=\"https://github.com/mdx-js/mdx\">mdx</a></p>\n</blockquote>\n<h3>部署</h3>\n<p>包括 Next 文档站点 和 storybook 构建的静态站点部署</p>\n<h4></h4>\n<h4>Next.js</h4>\n<p>site 目录集成了 <code class=\"language-text\">scripts</code>命令如下</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run collect-meta &amp;&amp; next dev\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run collect-meta &amp;&amp; next build\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"next start\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"lint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"next lint\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"collect-meta\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node ../scripts/collect-meta.js\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>文档站点直接托管到了 vercel</p>\n<p>文档站点：<a href=\"https://block-ui-alpha.vercel.app/en-us\">https://block-ui-alpha.vercel.app/en-us</a></p>\n<h4>StoryBook</h4>\n<p>执行 以下命令 构建静态产物</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"build-storybook\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"build-storybook\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>也可以使用 Github Actions 自动触发部署，在项目根目录新建<code class=\"language-text\">.github/workflows/gh-pages.yml</code>文件，后续 master 触发 push 操作时则会自动触发站点部署，更多配置可自行参阅文档。</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> github pages\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> master <span class=\"token comment\"># default branch</span>\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span><span class=\"token number\">18.04</span>\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> yarn run init\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> yarn run build<span class=\"token punctuation\">-</span>storybook\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> peaceiris/actions<span class=\"token punctuation\">-</span>gh<span class=\"token punctuation\">-</span>pages@v3\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">github_token</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.GITHUB_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token key atrule\">publish_dir</span><span class=\"token punctuation\">:</span> ./storybook<span class=\"token punctuation\">-</span>static</code></pre></div>\n<p>StoryBook 站点：<a href=\"https://block-org.github.io/block-ui/\">https://block-org.github.io/block-ui/</a></p>\n<h2>五，发布</h2>\n<h3>前言</h3>\n<p>本节主要是讲解如何编写脚本完成以下内容：</p>\n<ol>\n<li>版本更新</li>\n<li>生成 CHANGELOG</li>\n<li>推送至 git 仓库</li>\n<li>组件库打包</li>\n<li>发布至 npm</li>\n<li>打 tag 并推送至 git</li>\n</ol>\n<p>如果你对这一节不感兴趣，也可以直接使用 <a href=\"https://www.npmjs.com/package/np\">np</a> 进行发布，只需要自定义配置一些钩子。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> inquirer child_process util chalk semver @types/inquirer @types/semver -D</code></pre></div>\n<p><code class=\"language-text\">package.json</code></p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\">\"scripts\": {\n<span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span> \"release\": \"ts-node ./scripts/release.ts\"\n</span>},</code></pre></div>\n<p><code class=\"language-text\">scripts/release.ts</code></p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> inquirer <span class=\"token keyword\">from</span> <span class=\"token string\">\"inquirer\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> fs <span class=\"token keyword\">from</span> <span class=\"token string\">\"fs\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> path <span class=\"token keyword\">from</span> <span class=\"token string\">\"path\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> child_process <span class=\"token keyword\">from</span> <span class=\"token string\">\"child_process\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> util <span class=\"token keyword\">from</span> <span class=\"token string\">\"util\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> chalk <span class=\"token keyword\">from</span> <span class=\"token string\">\"chalk\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> semverInc <span class=\"token keyword\">from</span> <span class=\"token string\">\"semver/functions/inc\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ReleaseType <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"semver\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> pkg <span class=\"token keyword\">from</span> <span class=\"token string\">\"../package.json\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> exec <span class=\"token operator\">=</span> util<span class=\"token punctuation\">.</span><span class=\"token function\">promisify</span><span class=\"token punctuation\">(</span>child_process<span class=\"token punctuation\">.</span>exec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">run</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>command<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>chalk<span class=\"token punctuation\">.</span><span class=\"token function\">green</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> currentVersion <span class=\"token operator\">=</span> pkg<span class=\"token punctuation\">.</span>version<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> getNextVersions <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key <span class=\"token keyword\">in</span> ReleaseType<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  major<span class=\"token operator\">:</span> <span class=\"token function\">semverInc</span><span class=\"token punctuation\">(</span>currentVersion<span class=\"token punctuation\">,</span> <span class=\"token string\">\"major\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  minor<span class=\"token operator\">:</span> <span class=\"token function\">semverInc</span><span class=\"token punctuation\">(</span>currentVersion<span class=\"token punctuation\">,</span> <span class=\"token string\">\"minor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  patch<span class=\"token operator\">:</span> <span class=\"token function\">semverInc</span><span class=\"token punctuation\">(</span>currentVersion<span class=\"token punctuation\">,</span> <span class=\"token string\">\"patch\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  premajor<span class=\"token operator\">:</span> <span class=\"token function\">semverInc</span><span class=\"token punctuation\">(</span>currentVersion<span class=\"token punctuation\">,</span> <span class=\"token string\">\"premajor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  preminor<span class=\"token operator\">:</span> <span class=\"token function\">semverInc</span><span class=\"token punctuation\">(</span>currentVersion<span class=\"token punctuation\">,</span> <span class=\"token string\">\"preminor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  prepatch<span class=\"token operator\">:</span> <span class=\"token function\">semverInc</span><span class=\"token punctuation\">(</span>currentVersion<span class=\"token punctuation\">,</span> <span class=\"token string\">\"prepatch\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  prerelease<span class=\"token operator\">:</span> <span class=\"token function\">semverInc</span><span class=\"token punctuation\">(</span>currentVersion<span class=\"token punctuation\">,</span> <span class=\"token string\">\"prerelease\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> timeLog <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>logInfo<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"start\"</span> <span class=\"token operator\">|</span> <span class=\"token string\">\"end\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> info <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>type <span class=\"token operator\">===</span> <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    info <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">=> 开始任务：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>logInfo<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    info <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">✨ 结束任务：</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>logInfo<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> nowDate <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">[</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>nowDate<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>nowDate\n      <span class=\"token punctuation\">.</span><span class=\"token function\">getMilliseconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">] </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>info<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\n    </span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * 询问获取下一次版本号\n */</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> nextVersions <span class=\"token operator\">=</span> <span class=\"token function\">getNextVersions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> nextVersion <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> inquirer<span class=\"token punctuation\">.</span><span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">\"list\"</span><span class=\"token punctuation\">,</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">\"nextVersion\"</span><span class=\"token punctuation\">,</span>\n      message<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">请选择将要发布的版本 (当前版本 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>currentVersion<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      choices<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>nextVersions<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span>ReleaseType<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">(</span>level<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          name<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>level<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> => </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>nextVersions<span class=\"token punctuation\">[</span>level<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n          value<span class=\"token operator\">:</span> nextVersions<span class=\"token punctuation\">[</span>level<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> nextVersion<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * 更新版本号\n * @param nextVersion 新版本号\n */</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">updateVersion</span><span class=\"token punctuation\">(</span>nextVersion<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  pkg<span class=\"token punctuation\">.</span>version <span class=\"token operator\">=</span> nextVersion<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">timeLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"修改package.json版本号\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">writeFileSync</span><span class=\"token punctuation\">(</span>\n    path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"./../package.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>pkg<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"npx prettier package.json --write\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">timeLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"修改package.json版本号\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"end\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * 生成CHANGELOG\n */</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">generateChangelog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">timeLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"生成CHANGELOG.md\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" npx conventional-changelog -p angular -i CHANGELOG.md -s -r 0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">timeLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"生成CHANGELOG.md\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"end\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * 将代码提交至git\n */</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">push</span><span class=\"token punctuation\">(</span>nextVersion<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">timeLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"推送代码至git仓库\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"git add package.json CHANGELOG.md\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">git commit -m \"v</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>nextVersion<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" -n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"git push\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">timeLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"推送代码至git仓库\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"end\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * 组件库打包\n */</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">timeLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"组件库打包\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"npm run build\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">timeLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"组件库打包\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"end\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * 发布至npm\n */</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">publish</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">timeLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"发布组件库\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"npm publish\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">timeLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"发布组件库\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"end\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * 打tag提交至git\n */</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">tag</span><span class=\"token punctuation\">(</span>nextVersion<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">timeLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打tag并推送至git\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">git tag v</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>nextVersion<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">git push origin tag v</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>nextVersion<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">timeLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打tag并推送至git\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"end\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> nextVersion <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> startTime <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// =================== 更新版本号 ===================</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">updateVersion</span><span class=\"token punctuation\">(</span>nextVersion<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// =================== 更新changelog ===================</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">generateChangelog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// =================== 代码推送git仓库 ===================</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">push</span><span class=\"token punctuation\">(</span>nextVersion<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// =================== 组件库打包 ===================</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// =================== 发布至npm ===================</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">publish</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// =================== 打tag并推送至git ===================</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">tag</span><span class=\"token punctuation\">(</span>nextVersion<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">✨ 发布流程结束 共耗时</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> startTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">s</span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"💣 发布失败，失败原因：\"</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>其他</h3>\n<p>每次初始化一个组件就要新建许多文件（夹），复制粘贴也可，不过还可以使用更高级一点的偷懒方式。</p>\n<p>思路如下：</p>\n<ol>\n<li>创建组件模板，预留动态信息插槽（组件名称，组件描述等等）；</li>\n<li>基于<code class=\"language-text\">inquirer.js</code>询问动态信息；</li>\n<li>将信息插入模板，渲染至<code class=\"language-text\">components</code>文件夹下；</li>\n<li>向 components/index.ts 插入导出语句。</li>\n</ol>\n<p>只需要配置好模板以及问题，至于询问以及渲染就交给<a href=\"https://plopjs.com/\">plop.js</a></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> plop --dev</code></pre></div>\n<p>新增脚本命令。</p>\n<p><strong>package.json</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\">\"scripts\": {\n<span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span> \"new\": \"plop --plopfile ./scripts/plopfile.ts\",\n</span>},</code></pre></div>\n<p>新增配置文件 <code class=\"language-text\">scripts/plopfile.ts</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">plop</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  plop<span class=\"token punctuation\">.</span><span class=\"token function\">setGenerator</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"component\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    description<span class=\"token operator\">:</span> <span class=\"token string\">\"新增一个新组件\"</span><span class=\"token punctuation\">,</span>\n    prompts<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> <span class=\"token string\">\"input\"</span><span class=\"token punctuation\">,</span>\n        name<span class=\"token operator\">:</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span>\n        message<span class=\"token operator\">:</span> <span class=\"token string\">\"请输入组件名称（多个单词以中横线命名）\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"input\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"CN\"</span><span class=\"token punctuation\">,</span> message<span class=\"token operator\">:</span> <span class=\"token string\">\"请输入组件中文名称\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"input\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"description\"</span><span class=\"token punctuation\">,</span> message<span class=\"token operator\">:</span> <span class=\"token string\">\"请输入组件描述\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    actions<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> <span class=\"token string\">\"add\"</span><span class=\"token punctuation\">,</span>\n        path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>\n          __dirname<span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"../components/{{kebabCase name}}/index.ts\"</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        templateFile<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>\n          __dirname<span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"../templates/component/index.hbs\"</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token comment\">// ...</span>\n\n      <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> <span class=\"token string\">\"append\"</span><span class=\"token punctuation\">,</span>\n        path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"../components/index.ts\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        pattern<span class=\"token operator\">:</span> <span class=\"token string\">\"/* PLOP_INJECT_EXPORT */\"</span><span class=\"token punctuation\">,</span>\n        template<span class=\"token operator\">:</span>\n          <span class=\"token string\">\"export { default as {{pascalCase name}} } from './{{kebabCase name}}';\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>新增组件模板<code class=\"language-text\">templates/component</code>见 <a href=\"https://github.com/block-org/block-ui/tree/master/templates/component\">https://github.com/block-org/block-ui/tree/master/templates/component</a></p>\n<h2>references</h2>\n<ul>\n<li><a href=\"https://dev.to/alexeagleson/how-to-create-and-publish-a-react-component-library-2oe\">https://dev.to/alexeagleson/how-to-create-and-publish-a-react-component-library-2oe</a></li>\n<li><a href=\"https://github.com/worldzhao/blog/issues/3\">https://github.com/worldzhao/blog/issues/3</a></li>\n<li><a href=\"https://github.com/worldzhao/blog/issues/4\">https://github.com/worldzhao/blog/issues/4</a></li>\n<li><a href=\"https://github.com/worldzhao/blog/issues/5\">https://github.com/worldzhao/blog/issues/5</a></li>\n<li><a href=\"https://github.com/worldzhao/blog/issues/6\">https://github.com/worldzhao/blog/issues/6</a></li>\n<li><a href=\"https://github.com/worldzhao/blog/issues/7\">https://github.com/worldzhao/blog/issues/7</a></li>\n<li><a href=\"https://arco.design/react/docs/start\">https://arco.design/react/docs/start</a></li>\n</ul>\n<blockquote>\n<p>作者：<a href=\"https://www.shanejix.com/\">shanejix</a>\n出处：<a href=\"https://www.shanejix.com/posts/%E4%BB%8E%200%20%E5%88%B0%201%20%E6%90%AD%E5%BB%BA%20React%20UI%20%E7%BB%84%E4%BB%B6%E5%BA%93/\">https://www.shanejix.com/posts/从 0 到 1 搭建 React UI 组件库/</a>\n版权：本作品采用<a href=\"http://creativecommons.org/licenses/by-nc-nd/4.0/\">「署名-非商业性使用-相同方式共享 4.0 国际」</a>许可协议进行许可。\n声明：转载请注明出处！</p>\n</blockquote>","frontmatter":{"title":"从 0 到 1 搭建 React UI 组件库","date":"October 18, 2021","update":"April 12, 2022","url":"https://github.com/shanejix/shanejix.github.io/issues/76"}}},"pageContext":{"slug":"/从 0 到 1 搭建 React UI 组件库/","previous":{"fields":{"slug":"/Web 站点动态主题切换实现/"},"frontmatter":{"title":"Web 站点动态主题切换实现","tags":["CSS"]}},"next":{"fields":{"slug":"/基于 Yuque + GitHub 的博客写作流/"},"frontmatter":{"title":"基于 Yuque + GitHub 的博客写作流","tags":["Blog"]}}}},"staticQueryHashes":["3159585216","63159454"]}