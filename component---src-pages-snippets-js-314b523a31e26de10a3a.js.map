{"version":3,"sources":["webpack:///./src/pages/snippets.js"],"names":["SnippetsPage","data","group","allMarkdownRemark","site","siteMetadata","title","description","pageName","htmlAttributes","lang","meta","name","content","style","borderRadius","paddingTop","marginBottom","fontSize","reverse","map","item","idx","currSnippet","edges","node","slug","fields","frontmatter","date","tags","includes","key","to","padding","filter","tag"],"mappings":"4FAAA,iFAqFeA,UA7EM,SAAC,GAAD,QACnBC,KACuBC,EAFJ,EAEjBC,kBAAqBD,MAFJ,IAGjBE,KACEC,aAAgBC,EAJD,EAICA,MAAOC,EAJR,EAIQA,YAJR,OAQnB,uBACE,YAAC,IAAD,CAAQD,MAAM,gBAAgBE,SAAS,YACrC,YAAC,IAAD,CAAKF,MAAM,aACX,YAAC,IAAD,CACEG,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAASN,IACvCD,MAAOA,IAET,uBACEQ,MAAO,CAELC,aAAa,MACbC,WAAY,SACZC,aAAa,SAEbC,SAAS,SAGX,kCACA,6FACA,sBAEIhB,EAAMiB,UAAUC,KAAI,SAACC,EAAMC,GACzB,IAAMC,EAAcF,EAAKG,MAAM,GAAGC,MAAQ,GACpCC,EAAOH,EAAYI,OAAOD,KAC1BpB,EAAQiB,EAAYK,YAAYtB,MAChCuB,EAAON,EAAYK,YAAYC,KAC/BC,EAAOP,EAAYK,YAAYE,KAErC,GAAIA,EAAKC,SAAS,WAChB,OACE,kBAAIC,IAAKV,GACP,YAAC,OAAD,CAAMW,GAAE,SAAWP,GAChBpB,GAEH,oBAAMQ,MAAO,CACXoB,QAAS,UADX,IAIIJ,EAAKK,QAAQ,SAAAC,GAAG,MAAY,YAARA,KAAoBhB,KAAI,SAAAgB,GAC5C,OACE,oBACEtB,MAAO,CACLoB,QAAS,UAGX,YAAC,OAAD,CAEED,GAAE,SAAWG,GAEZA,OAfX,KAsBA,4BAAQP,EAAR","file":"component---src-pages-snippets-js-314b523a31e26de10a3a.js","sourcesContent":["import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\n\nconst SnippetsPage = ({\n  data: {\n    allMarkdownRemark: { group },\n    site: {\n      siteMetadata: { title, description },\n    },\n  },\n}) => (\n  <div>\n    <Layout title=\"Shanejix Blog\" pageName=\"Snippets\">\n      <SEO title=\"snippets\" />\n      <Helmet\n        htmlAttributes={{ lang: \"en\" }}\n        meta={[{ name: \"description\", content: description }]}\n        title={title}\n      />\n      <article\n        style={{\n          // border: `1px solid black`,\n          borderRadius: `3px`,\n          paddingTop: '3.5rem',\n          marginBottom: `0.5rem`,\n          // background: `white`,\n          fontSize: `1rem`,\n        }}\n      >\n        <h2>Snippets</h2>\n        <p>Short solutions to discrete problems which can be copied and pasted.</p>\n        <ul>\n          {\n            group.reverse().map((item, idx) => {\n              const currSnippet = item.edges[0].node || {};\n              const slug = currSnippet.fields.slug;\n              const title = currSnippet.frontmatter.title;\n              const date = currSnippet.frontmatter.date;\n              const tags = currSnippet.frontmatter.tags;\n\n              if (tags.includes('Snippet')) {\n                return (\n                  <li key={idx}>\n                    <Link to={`/posts${slug}`}>\n                      {title}\n                    </Link>\n                    <span style={{\n                      padding: '0 5px'\n                    }}>\n                      [\n                      {(tags.filter((tag => tag !== 'Snippet')).map(tag => {\n                        return (\n                          <span\n                            style={{\n                              padding: '0 2px'\n                            }}\n                          >\n                            <Link\n\n                              to={`/tags/${tag}`}\n                            >\n                              {tag}\n                            </Link>\n                          </span>\n                        )\n                      }))}\n                      ]\n                    </span>\n                    <span>[{date}]</span>\n                  </li>\n                )\n              }\n            })\n          }\n        </ul>\n      </article>\n    </Layout>\n  </div>\n)\n\nexport default SnippetsPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___date) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n            frontmatter {\n              date\n              title\n              update\n              tags\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}